import DashboardLayout from '@/DashboardLayout'
import { Button, Chip, Container, Toolbar } from '@mui/material'
import Head from 'next/head'
import Title from './../../../../components/Title/Title';
import Card from '@mui/material/Card';
import CardHeader from '@mui/material/CardHeader';
import CardMedia from '@mui/material/CardMedia';
import CardContent from '@mui/material/CardContent';
import CardActions from '@mui/material/CardActions';
import Avatar from '@mui/material/Avatar';
import Typography from '@mui/material/Typography';
import { red } from '@mui/material/colors';
import { useQuery } from '@tanstack/react-query';
import useAxiosSecure from '@/hooks/useAxiosSecure';
import { useContext } from 'react';
import { AuthContext } from '@/Provider/AuthProvider';
import Lottie from 'lottie-react';
import loading from '../../../../assets/Loading/loading.json';
import { useRouter } from 'next/router';

 const MyClass = () => {
const axiosSecure = useAxiosSecure()
const { user } = useContext(AuthContext)
// 
const {
  data: classRequests,
  refetch,
  isLoading,
} = useQuery({
  queryKey: ["classRequests"],
  queryFn: async () => {
    if(user?.email){
      const res = await axiosSecure.get(`/classreq?email=${user?.email}`);
      return res.data;
    }else{
      return null
    }
  },
});

if (isLoading) {
  return (
    <Container
      sx={{
        height: "100vh",
        display: "flex",
        justifyContent: "center",
        alignItems: "center",
      }}
    >
      <Lottie animationData={loading} />
    </Container>
  );
}
refetch()


console.log(classRequests)
  return (
    <DashboardLayout>
          <Head>
    <title>My Class|| EduPulse </title>
    <meta name="description" content="Generated by create next app" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <link rel="icon" href="/favicon.ico" />
  </Head>
      <Toolbar />
      <Title title={'My'} titleColor={'Classes'} />

<Container maxWidth='xl' sx={{my:'4rem',display:'flex',gap:'1rem', flexWrap:'wrap',justifyContent:'center'}}>

{classRequests && classRequests.map(classItem => (
  <Card key={classItem?._id} sx={{ maxWidth: 345 }}>
    <CardHeader
      avatar={
        <Avatar sx={{ bgcolor: red[500] }} src={classItem.userImage} aria-label="teacher">
          {classItem.teacherName}
        </Avatar>
      }
      title={classItem.teacher}
      subheader={classItem.teacherMail}
    />
    <CardMedia
      component="img"
      height="194"
      image={classItem.image}
      alt={classItem.title}
    />
    <CardContent>
      <Typography variant="body2" color="text.secondary">
        {classItem.shortDesc}
      </Typography>
<div style={{display:'flex',justifyContent:'space-between'}}><Typography variant="p" fontWeight='bold' color="text.secondary">
       price: ${classItem.price}
      </Typography>
      <Typography variant="p" fontWeight='bold' color="text.secondary">
      <Chip
  label={classItem.status.toUpperCase()}
  color={classItem.status === 'approved' ? 'success' : 'error'}
/>

      </Typography></div>
    </CardContent>
    <CardActions>
      <Button size="md" variant="contained" color="success">
        Update
      </Button>
      <Button size="md" variant="contained" color="error">
        Delete
      </Button>
      <Button variant="outlined" color="error" size="md">
        See Details
      </Button>
    </CardActions>
  </Card>
))}


</Container>




      
    </DashboardLayout>
  )
}


export default MyClass